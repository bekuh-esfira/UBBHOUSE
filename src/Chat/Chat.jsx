import React, { useState } from "react";
import "./Chat.css";

const Chat = () => {
  const [messages, setMessages] = useState([
    { text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", sender: "developer" },
  ]);
  const [inputMessage, setInputMessage] = useState("");

  const handleSendMessage = () => {
    if (inputMessage.trim() !== "") {
      const newMessage = { text: inputMessage, sender: "user" };
      setMessages((prev) => [...prev, newMessage]);
      setInputMessage("");

      setTimeout(() => {
        const reply = generateSmartReply(inputMessage);
        setMessages((prev) => [...prev, { text: reply, sender: "developer" }]);
      }, 800);
    }
  };

  const generateSmartReply = (message) => {
    const lowerMsg = message.toLowerCase();

    if (lowerMsg.includes("–ø—Ä–∏–≤–µ—Ç") || lowerMsg.includes("–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ") || lowerMsg.includes("–¥–æ–±—Ä—ã–π –¥–µ–Ω—å")) {
      return "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥—ã –≤–∞—Å –≤–∏–¥–µ—Ç—å üëã –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?";
    }

    if (lowerMsg.includes("—Ü–µ–Ω–∞") || lowerMsg.includes("—Å—Ç–æ–∏–º–æ—Å—Ç—å")) {
      return "–ù–∞—à–∏ –¥–æ–º–∞ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –æ—Ç 6 900 000 ‚ÇΩ. –•–æ—Ç–∏—Ç–µ, –ø–æ–¥–±–µ—Ä—É –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç—ã?";
    }

    if (lowerMsg.includes("–¥–æ–º") || lowerMsg.includes("–ø—Ä–æ–µ–∫—Ç—ã") || lowerMsg.includes("–≤–∞—Ä–∏–∞–Ω—Ç—ã")) {
      return "–£ –Ω–∞—Å –±–æ–ª–µ–µ 30 –≤–∏–¥–æ–≤ –¥–æ–º–æ–≤! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?";
    }

    if (lowerMsg.includes("—Å–ø–∞—Å–∏–±–æ")) {
      return "–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! üòä";
    }

    if (lowerMsg.includes("–ø–æ–∫–∞") || lowerMsg.includes("–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è")) {
      return "–î–æ –≤—Å—Ç—Ä–µ—á–∏! –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üåü";
    }

    if (lowerMsg.length <= 2 || /^[0-9]+$/.test(lowerMsg)) {
      return "–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–∞—Å üôà –ú–æ–∂–µ—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å?";
    }

    const defaultReplies = [
      "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –°–µ–π—á–∞—Å —É—Ç–æ—á–Ω—é –∏ –≤–µ—Ä–Ω—É—Å—å –∫ –≤–∞–º.",
      "–†–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –≤–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–æ–º üíº",
      "–ú–æ–≥—É —è –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π, —á—Ç–æ–±—ã –ª—É—á—à–µ –≤–∞–º –ø–æ–º–æ—á—å?",
      "–°—É–ø–µ—Ä! –î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ.",
    ];
    return defaultReplies[Math.floor(Math.random() * defaultReplies.length)];
  };

  const handleKeyPress = (e) => {
    if (e.key === "Enter") {
      handleSendMessage();
    }
  };

  return (
    <div className="chat-fullscreen">
      <div className="chat-header">
        <h1>UBBHomes</h1>
        <p>–û–Ω–ª–∞–π–Ω: —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –≥–ª–∞–≤–∞ –∫–æ–º–ø–∞–Ω–∏–∏</p>
      </div>

      <div className="chat-messages">
        {messages.map((msg, idx) => (
          <div key={idx} className={`message ${msg.sender}`}>
            {msg.text}
          </div>
        ))}
      </div>

      <div className="chat-input">
        <input
          type="text"
          placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
          value={inputMessage}
          onChange={(e) => setInputMessage(e.target.value)}
          onKeyPress={handleKeyPress}
        />
        <button onClick={handleSendMessage}>‚û§</button>
      </div>
    </div>
  );
};

export default Chat;
